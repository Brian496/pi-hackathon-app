#!/bin/bash

# Bybit-Style Exploit Hunting Toolkit Setup Script
# Automated environment setup and dependency installation

set -e  # Exit on any error

echo "🚀 Setting up Bybit-Style Exploit Hunting Toolkit..."
echo "=================================================="

# Check if Python 3.8+ is installed
python_version=$(python3 -c 'import sys; print(".".join(map(str, sys.version_info[:2])))')
echo "📍 Detected Python version: $python_version"

if python3 -c 'import sys; exit(0 if sys.version_info >= (3, 8) else 1)'; then
    echo "✅ Python version is compatible"
else
    echo "❌ Python 3.8+ is required. Please upgrade Python."
    exit 1
fi

# Create virtual environment
echo "🐍 Creating virtual environment..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    echo "✅ Virtual environment created"
else
    echo "📋 Virtual environment already exists"
fi

# Activate virtual environment
echo "🔌 Activating virtual environment..."
source venv/bin/activate

# Upgrade pip
echo "⬆️  Upgrading pip..."
pip install --upgrade pip

# Install requirements
echo "📦 Installing Python dependencies..."
pip install -r requirements.txt

echo "✅ Dependencies installed successfully"

# Create configuration files
echo "⚙️  Creating configuration files..."

# Create .env file template
if [ ! -f ".env" ]; then
    cat > .env << EOF
# Ethereum RPC Configuration
ETH_RPC_URL=https://eth-mainnet.alchemyapi.io/v2/YOUR_API_KEY

# Optional: Discord/Slack webhook for alerts
WEBHOOK_URL=https://discord.com/api/webhooks/YOUR_WEBHOOK_URL

# Optional: Etherscan API key for enhanced analysis
ETHERSCAN_API_KEY=YOUR_ETHERSCAN_API_KEY

# Monitoring Configuration
SCAN_INTERVAL_SECONDS=12
RISK_THRESHOLD=50
MAX_BLOCKS_BEHIND=100

# Bug Bounty Platform APIs (Optional)
IMMUNEFI_API_KEY=YOUR_IMMUNEFI_API_KEY
HACKERONE_API_KEY=YOUR_HACKERONE_API_KEY
EOF
    echo "✅ Created .env configuration template"
else
    echo "📋 .env file already exists"
fi

# Create logs directory
echo "📁 Creating logs directory..."
mkdir -p logs
touch logs/exploit_monitor.log
touch logs/vulnerability_scanner.log

# Make Python scripts executable
echo "🔑 Making scripts executable..."
chmod +x vulnerability_scanner.py
chmod +x exploit_monitor.py

# Create quick start scripts
echo "🎯 Creating quick start scripts..."

# Vulnerability scanner quick start
cat > scan_targets.sh << 'EOF'
#!/bin/bash
echo "🔍 Running vulnerability scan on high-value targets..."
source venv/bin/activate
python3 vulnerability_scanner.py
EOF
chmod +x scan_targets.sh

# Real-time monitoring quick start
cat > start_monitoring.sh << 'EOF'
#!/bin/bash
echo "👀 Starting real-time exploit monitoring..."
source venv/bin/activate
python3 exploit_monitor.py
EOF
chmod +x start_monitoring.sh

# Combined analysis script
cat > run_full_analysis.sh << 'EOF'
#!/bin/bash
echo "🚀 Running complete exploit hunting analysis..."
source venv/bin/activate

echo "📊 Step 1: Vulnerability Scanning..."
python3 vulnerability_scanner.py

echo "⏰ Waiting 5 seconds..."
sleep 5

echo "👀 Step 2: Starting Real-time Monitoring..."
python3 exploit_monitor.py
EOF
chmod +x run_full_analysis.sh

# Test RPC connection
echo "🌐 Testing RPC connection..."
if source venv/bin/activate && python3 -c "
from web3 import Web3
import os
rpc_url = os.getenv('ETH_RPC_URL', 'https://eth-mainnet.alchemyapi.io/v2/demo')
web3 = Web3(Web3.HTTPProvider(rpc_url))
if web3.is_connected():
    print('✅ RPC connection successful')
    print(f'📡 Latest block: {web3.eth.block_number}')
else:
    print('⚠️  RPC connection failed - please check your .env configuration')
"; then
    echo "🎉 RPC test completed"
else
    echo "⚠️  RPC test failed - continuing setup"
fi

echo ""
echo "🎉 SETUP COMPLETE!"
echo "=================="
echo ""
echo "📋 Next steps:"
echo "1. Edit .env file with your RPC URL and API keys"
echo "2. Run vulnerability scan: ./scan_targets.sh"
echo "3. Start real-time monitoring: ./start_monitoring.sh"
echo "4. Or run complete analysis: ./run_full_analysis.sh"
echo ""
echo "📖 Available commands:"
echo "  ./scan_targets.sh      - Scan high-value targets for vulnerabilities"
echo "  ./start_monitoring.sh  - Monitor real-time transactions"
echo "  ./run_full_analysis.sh - Complete analysis workflow"
echo ""
echo "🔧 Configuration:"
echo "  .env                   - Main configuration file"
echo "  logs/                  - Log files directory"
echo "  venv/                  - Python virtual environment"
echo ""
echo "⚠️  IMPORTANT: Update your .env file with proper RPC URLs and API keys before running!"
echo ""
echo "🎯 Ready to hunt for Bybit-style exploits! Good luck!"